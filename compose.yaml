services:
  web:
    container_name: web
    build:
      context: ./web
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000

  server:
    container_name: server
    build:
      context: ./server
      target: final
      dockerfile: ./build/server/Dockerfile
    ports:
      - 8080:8080
    configs:
      - source: server-config
        target: /config.json
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy

  mongo1:
    container_name: mongo1
    image: mongo:latest
    restart: "always"
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27017",
        "--keyFile",
        "/etc/mongodb/pki/keyfile",
      ]
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ${PWD}/server/rs_keyfile:/etc/mongodb/pki/keyfile
      - mongo1-data:/data/db
      - mongo1-config:/data/configdb
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo2:
    container_name: mongo2
    restart: "always"
    image: mongo:latest
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27018",
        "--keyFile",
        "/etc/mongodb/pki/keyfile",
      ]
    ports:
      - "27018:27018"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ${PWD}/server/rs_keyfile:/etc/mongodb/pki/keyfile
      - mongo2-data:/data/db
      - mongo2-config:/data/configdb
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27018/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-setup:
    container_name: mongo-setup
    image: mongo:latest
    volumes:
      - ${PWD}/server/scripts:/scripts
    restart: "no"
    entrypoint: ["bash", "/scripts/mongo-rs-setup.sh"]
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy

  swagger:
    container_name: swagger
    build:
      context: ./server
      target: final
      dockerfile: ./build/swagger/Dockerfile
    ports:
      - 1323:1323

volumes:
  mongo1-data:
  mongo1-config:
  mongo2-data:
  mongo2-config:

configs:
  server-config:
    file: ./server/config.json
