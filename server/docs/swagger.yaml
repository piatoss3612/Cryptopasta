definitions:
  mission.Entry:
    properties:
      createdAt:
        type: integer
      id:
        type: string
      messages:
        items:
          $ref: '#/definitions/mission.Message'
        type: array
      missionID:
        type: string
      updateAt:
        type: integer
    type: object
  mission.Message:
    properties:
      b64Image:
        type: string
      content:
        type: string
      isImage:
        type: boolean
      isReport:
        type: boolean
      isUser:
        type: boolean
    type: object
  mission.Mission:
    properties:
      agentID:
        type: string
      createdAt:
        type: integer
      id:
        type: string
      reportID:
        type: string
      title:
        type: string
    type: object
  pinata.PinResponse:
    properties:
      IpfsHash:
        type: string
      PinSize:
        type: integer
      Timestamp:
        type: string
    type: object
  route.ActOnMissionRequest:
    properties:
      input:
        type: string
    type: object
  route.AgentRegisterRequest:
    properties:
      agent_address:
        type: string
      portrait_id:
        type: string
    type: object
  route.AgentRegisterResponse:
    properties:
      agent_account:
        type: string
      token_id:
        type: string
    type: object
  route.CreateMissionRequest:
    properties:
      agent_id:
        type: string
      report_id:
        type: string
    type: object
  route.GetMissionsResponse:
    properties:
      cursor:
        type: string
      missions:
        items:
          $ref: '#/definitions/mission.Mission'
        type: array
    type: object
  route.Metadata:
    properties:
      description:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: piatoss3612@gmail.com
    name: piatoss
    url: https://piatoss.xyz
  description: API for Cryptopasta DApp
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Cryptopasta API
  version: "1.0"
paths:
  /agent:
    post:
      consumes:
      - application/json
      description: Register a new agent to the system
      parameters:
      - description: Agent Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/route.AgentRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/route.AgentRegisterResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Agent Register
      tags:
      - agent
  /mission:
    get:
      consumes:
      - application/json
      description: Get missions by agent id
      parameters:
      - description: Agent ID
        in: query
        name: agentID
        required: true
        type: string
      - description: Last Mission ID
        in: query
        name: lastMissionID
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.GetMissionsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Missions
      tags:
      - mission
    post:
      consumes:
      - application/json
      description: Create a new mission
      parameters:
      - description: Session ID
        in: query
        name: sessionID
        required: true
        type: string
      - description: Create Mission Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/route.CreateMissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mission.Mission'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Mission
      tags:
      - mission
  /mission/{missionID}:
    post:
      consumes:
      - application/json
      description: Act on a mission
      parameters:
      - description: Mission ID
        in: path
        name: missionID
        required: true
        type: string
      - description: Session ID
        in: query
        name: sessionID
        required: true
        type: string
      - description: Act On Mission Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/route.ActOnMissionRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Act On Mission
      tags:
      - mission
  /mission/{missionID}/entries:
    get:
      consumes:
      - text/plain
      description: Get mission entries by mission id
      parameters:
      - description: Mission ID
        in: path
        name: missionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mission.Entry'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Mission Entries
      tags:
      - mission
  /mission/ws:
    get:
      consumes:
      - text/plain
      description: Connect to a mission via websocket
      parameters:
      - description: Access Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - text/plain
      responses: {}
      summary: Connect WebSocket
      tags:
      - mission
  /pinata/pinFile:
    post:
      description: Pin file to IPFS
      parameters:
      - description: File to pin
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pinata.PinResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Pin File
      tags:
      - ipfs
  /pinata/pinJson:
    post:
      consumes:
      - application/json
      description: Pin json to IPFS
      parameters:
      - description: Metadata to pin
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/route.Metadata'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pinata.PinResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Pin Json
      tags:
      - ipfs
  /ping:
    get:
      consumes:
      - text/plain
      description: Ping
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Ping
      tags:
      - common
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
