// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReportDiscovery extends ethereum.Event {
  get params(): ReportDiscovery__Params {
    return new ReportDiscovery__Params(this);
  }
}

export class ReportDiscovery__Params {
  _event: ReportDiscovery;

  constructor(event: ReportDiscovery) {
    this._event = event;
  }

  get reportId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get reporter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get priceInUSD(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[3].value.toString();
  }

  get contentURI(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class ReportRated extends ethereum.Event {
  get params(): ReportRated__Params {
    return new ReportRated__Params(this);
  }
}

export class ReportRated__Params {
  _event: ReportRated;

  constructor(event: ReportRated) {
    this._event = event;
  }

  get reportId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get rater(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rating(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class ReportTaken extends ethereum.Event {
  get params(): ReportTaken__Params {
    return new ReportTaken__Params(this);
  }
}

export class ReportTaken__Params {
  _event: ReportTaken;

  constructor(event: ReportTaken) {
    this._event = event;
  }

  get reportId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentMethod(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class SalesClaimed extends ethereum.Event {
  get params(): SalesClaimed__Params {
    return new SalesClaimed__Params(this);
  }
}

export class SalesClaimed__Params {
  _event: SalesClaimed;

  constructor(event: SalesClaimed) {
    this._event = event;
  }

  get reportId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountInETH(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountInUSDT(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class bulletin_board__getDiscoveryReportResultValue0Struct extends ethereum.Tuple {
  get reporter(): Address {
    return this[0].toAddress();
  }

  get createdAt(): BigInt {
    return this[1].toBigInt();
  }

  get priceInUSD(): BigInt {
    return this[2].toBigInt();
  }

  get title(): string {
    return this[3].toString();
  }

  get contentURI(): string {
    return this[4].toString();
  }
}

export class bulletin_board__getRatingResultValue0Struct extends ethereum.Tuple {
  get totalCount(): BigInt {
    return this[0].toBigInt();
  }

  get totalRating(): BigInt {
    return this[1].toBigInt();
  }
}

export class bulletin_board__getRatingResult {
  value0: bulletin_board__getRatingResultValue0Struct;
  value1: i32;

  constructor(
    value0: bulletin_board__getRatingResultValue0Struct,
    value1: i32,
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    return map;
  }

  getValue0(): bulletin_board__getRatingResultValue0Struct {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class bulletin_board__getSalesResultValue0Struct extends ethereum.Tuple {
  get salesInETH(): BigInt {
    return this[0].toBigInt();
  }

  get salesInUSDT(): BigInt {
    return this[1].toBigInt();
  }

  get claimedInETH(): BigInt {
    return this[2].toBigInt();
  }

  get claimedInUSDT(): BigInt {
    return this[3].toBigInt();
  }
}

export class bulletin_board__getSalesResult {
  value0: bulletin_board__getSalesResultValue0Struct;
  value1: i32;

  constructor(value0: bulletin_board__getSalesResultValue0Struct, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    return map;
  }

  getValue0(): bulletin_board__getSalesResultValue0Struct {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class bulletin_board__reportingCostInETHResult {
  value0: BigInt;
  value1: i32;

  constructor(value0: BigInt, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class bulletin_board__reportingCostInUSDResult {
  value0: BigInt;
  value1: i32;

  constructor(value0: BigInt, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class bulletin_board__reportingCostInUSDTResult {
  value0: BigInt;
  value1: i32;

  constructor(value0: BigInt, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }
}

export class bulletin_board extends ethereum.SmartContract {
  static bind(address: Address): bulletin_board {
    return new bulletin_board("bulletin_board", address);
  }

  AGENT(): Address {
    let result = super.call("AGENT", "AGENT():(address)", []);

    return result[0].toAddress();
  }

  try_AGENT(): ethereum.CallResult<Address> {
    let result = super.tryCall("AGENT", "AGENT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  CP(): Address {
    let result = super.call("CP", "CP():(address)", []);

    return result[0].toAddress();
  }

  try_CP(): ethereum.CallResult<Address> {
    let result = super.tryCall("CP", "CP():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  PRICE_CONVERTER(): Address {
    let result = super.call(
      "PRICE_CONVERTER",
      "PRICE_CONVERTER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_PRICE_CONVERTER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "PRICE_CONVERTER",
      "PRICE_CONVERTER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  USDT(): Address {
    let result = super.call("USDT", "USDT():(address)", []);

    return result[0].toAddress();
  }

  try_USDT(): ethereum.CallResult<Address> {
    let result = super.tryCall("USDT", "USDT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDiscoveryReport(
    reportId: BigInt,
  ): bulletin_board__getDiscoveryReportResultValue0Struct {
    let result = super.call(
      "getDiscoveryReport",
      "getDiscoveryReport(uint256):((address,uint48,uint128,string,string))",
      [ethereum.Value.fromUnsignedBigInt(reportId)],
    );

    return changetype<bulletin_board__getDiscoveryReportResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getDiscoveryReport(
    reportId: BigInt,
  ): ethereum.CallResult<bulletin_board__getDiscoveryReportResultValue0Struct> {
    let result = super.tryCall(
      "getDiscoveryReport",
      "getDiscoveryReport(uint256):((address,uint48,uint128,string,string))",
      [ethereum.Value.fromUnsignedBigInt(reportId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<bulletin_board__getDiscoveryReportResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getRating(reportId: BigInt): bulletin_board__getRatingResult {
    let result = super.call(
      "getRating",
      "getRating(uint256):((uint128,uint128),uint8)",
      [ethereum.Value.fromUnsignedBigInt(reportId)],
    );

    return changetype<bulletin_board__getRatingResult>(
      new bulletin_board__getRatingResult(
        changetype<bulletin_board__getRatingResultValue0Struct>(
          result[0].toTuple(),
        ),
        result[1].toI32(),
      ),
    );
  }

  try_getRating(
    reportId: BigInt,
  ): ethereum.CallResult<bulletin_board__getRatingResult> {
    let result = super.tryCall(
      "getRating",
      "getRating(uint256):((uint128,uint128),uint8)",
      [ethereum.Value.fromUnsignedBigInt(reportId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<bulletin_board__getRatingResult>(
        new bulletin_board__getRatingResult(
          changetype<bulletin_board__getRatingResultValue0Struct>(
            value[0].toTuple(),
          ),
          value[1].toI32(),
        ),
      ),
    );
  }

  getSales(reportId: BigInt): bulletin_board__getSalesResult {
    let result = super.call(
      "getSales",
      "getSales(uint256):((uint128,uint128,uint128,uint128),uint8)",
      [ethereum.Value.fromUnsignedBigInt(reportId)],
    );

    return changetype<bulletin_board__getSalesResult>(
      new bulletin_board__getSalesResult(
        changetype<bulletin_board__getSalesResultValue0Struct>(
          result[0].toTuple(),
        ),
        result[1].toI32(),
      ),
    );
  }

  try_getSales(
    reportId: BigInt,
  ): ethereum.CallResult<bulletin_board__getSalesResult> {
    let result = super.tryCall(
      "getSales",
      "getSales(uint256):((uint128,uint128,uint128,uint128),uint8)",
      [ethereum.Value.fromUnsignedBigInt(reportId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<bulletin_board__getSalesResult>(
        new bulletin_board__getSalesResult(
          changetype<bulletin_board__getSalesResultValue0Struct>(
            value[0].toTuple(),
          ),
          value[1].toI32(),
        ),
      ),
    );
  }

  hasRated(rater: Address, reportId: BigInt): boolean {
    let result = super.call("hasRated", "hasRated(address,uint256):(bool)", [
      ethereum.Value.fromAddress(rater),
      ethereum.Value.fromUnsignedBigInt(reportId),
    ]);

    return result[0].toBoolean();
  }

  try_hasRated(rater: Address, reportId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRated", "hasRated(address,uint256):(bool)", [
      ethereum.Value.fromAddress(rater),
      ethereum.Value.fromUnsignedBigInt(reportId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ratingDecimals(): i32 {
    let result = super.call("ratingDecimals", "ratingDecimals():(uint8)", []);

    return result[0].toI32();
  }

  try_ratingDecimals(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "ratingDecimals",
      "ratingDecimals():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  reportingCostInETH(): bulletin_board__reportingCostInETHResult {
    let result = super.call(
      "reportingCostInETH",
      "reportingCostInETH():(uint256,uint8)",
      [],
    );

    return new bulletin_board__reportingCostInETHResult(
      result[0].toBigInt(),
      result[1].toI32(),
    );
  }

  try_reportingCostInETH(): ethereum.CallResult<bulletin_board__reportingCostInETHResult> {
    let result = super.tryCall(
      "reportingCostInETH",
      "reportingCostInETH():(uint256,uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new bulletin_board__reportingCostInETHResult(
        value[0].toBigInt(),
        value[1].toI32(),
      ),
    );
  }

  reportingCostInUSD(): bulletin_board__reportingCostInUSDResult {
    let result = super.call(
      "reportingCostInUSD",
      "reportingCostInUSD():(uint256,uint8)",
      [],
    );

    return new bulletin_board__reportingCostInUSDResult(
      result[0].toBigInt(),
      result[1].toI32(),
    );
  }

  try_reportingCostInUSD(): ethereum.CallResult<bulletin_board__reportingCostInUSDResult> {
    let result = super.tryCall(
      "reportingCostInUSD",
      "reportingCostInUSD():(uint256,uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new bulletin_board__reportingCostInUSDResult(
        value[0].toBigInt(),
        value[1].toI32(),
      ),
    );
  }

  reportingCostInUSDT(): bulletin_board__reportingCostInUSDTResult {
    let result = super.call(
      "reportingCostInUSDT",
      "reportingCostInUSDT():(uint256,uint8)",
      [],
    );

    return new bulletin_board__reportingCostInUSDTResult(
      result[0].toBigInt(),
      result[1].toI32(),
    );
  }

  try_reportingCostInUSDT(): ethereum.CallResult<bulletin_board__reportingCostInUSDTResult> {
    let result = super.tryCall(
      "reportingCostInUSDT",
      "reportingCostInUSDT():(uint256,uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new bulletin_board__reportingCostInUSDTResult(
        value[0].toBigInt(),
        value[1].toI32(),
      ),
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  usdPriceDecimals(): i32 {
    let result = super.call(
      "usdPriceDecimals",
      "usdPriceDecimals():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_usdPriceDecimals(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "usdPriceDecimals",
      "usdPriceDecimals():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _agent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _usdt(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get converter_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class BuyReportCall extends ethereum.Call {
  get inputs(): BuyReportCall__Inputs {
    return new BuyReportCall__Inputs(this);
  }

  get outputs(): BuyReportCall__Outputs {
    return new BuyReportCall__Outputs(this);
  }
}

export class BuyReportCall__Inputs {
  _call: BuyReportCall;

  constructor(call: BuyReportCall) {
    this._call = call;
  }

  get reportId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get paymentMethod(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class BuyReportCall__Outputs {
  _call: BuyReportCall;

  constructor(call: BuyReportCall) {
    this._call = call;
  }
}

export class ClaimSalesCall extends ethereum.Call {
  get inputs(): ClaimSalesCall__Inputs {
    return new ClaimSalesCall__Inputs(this);
  }

  get outputs(): ClaimSalesCall__Outputs {
    return new ClaimSalesCall__Outputs(this);
  }
}

export class ClaimSalesCall__Inputs {
  _call: ClaimSalesCall;

  constructor(call: ClaimSalesCall) {
    this._call = call;
  }

  get reportId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimSalesCall__Outputs {
  _call: ClaimSalesCall;

  constructor(call: ClaimSalesCall) {
    this._call = call;
  }
}

export class CreateReportCall extends ethereum.Call {
  get inputs(): CreateReportCall__Inputs {
    return new CreateReportCall__Inputs(this);
  }

  get outputs(): CreateReportCall__Outputs {
    return new CreateReportCall__Outputs(this);
  }
}

export class CreateReportCall__Inputs {
  _call: CreateReportCall;

  constructor(call: CreateReportCall) {
    this._call = call;
  }

  get title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get contentURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get priceInUSD(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get paymentMethod(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class CreateReportCall__Outputs {
  _call: CreateReportCall;

  constructor(call: CreateReportCall) {
    this._call = call;
  }
}

export class RateReportCall extends ethereum.Call {
  get inputs(): RateReportCall__Inputs {
    return new RateReportCall__Inputs(this);
  }

  get outputs(): RateReportCall__Outputs {
    return new RateReportCall__Outputs(this);
  }
}

export class RateReportCall__Inputs {
  _call: RateReportCall;

  constructor(call: RateReportCall) {
    this._call = call;
  }

  get reportId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get rating(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RateReportCall__Outputs {
  _call: RateReportCall;

  constructor(call: RateReportCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get paymentMethod(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
