/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AgentAccountFactory,
  AgentAccountFactoryInterface,
} from "../../../contracts/aa/AgentAccountFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_aaBytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AgentAccountFactory__DeploymentFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "aaBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "deployAccount",
    outputs: [
      {
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000100000001035500000000030100190000006003300270000000370030019d000000370330019700000001022001900000008f0000c13d0000008002000039000000400020043f000000040430008c000000c10000413d000000000401043b000000e0044002700000003a0540009c000000ba0000613d0000003b0440009c000000c10000c13d0000000004000416000000440330008c000000c10000413d000000000304004b000000c10000c13d0000002403100370000000000303043b0000003d0430009c000000c10000213d0000000004000414000000000500041a000000a00030043f0000002006000039000000800060043f0000003e07000041000000e00070043f0000000401100370000000000101043b000000e40010043f000001040050043f000001240020043f000001640060043f000001840030043f000001a40000043f0000000101000039000001440010043f000000c401000039000000c00010043f000001c001000039000000400010043f000000c0014002100000003f0110019700000040011001c70000800602000039000000000300001900000000040000190000000005000019000000000600001900d700d20000040f0000000003010019000000600330027000000037053001970000001f0350003900000038073001970000003f037000390000004106300197000000400400043d0000000003460019000000000663004b00000000060000190000000106004039000000420830009c000000c30000213d0000000106600190000000c30000c13d000000400030043f00000000035404360000001f0670018f0000000507700272000000590000613d000000000800003100000001088003670000000009000019000000050a900210000000000ba30019000000000aa8034f000000000a0a043b0000000000ab04350000000109900039000000000a79004b000000510000413d000000000606004b0000005b0000613d0000001f0650018f0000000505500272000000670000613d000000000700001900000005087002100000000009830019000000000881034f000000000808043b00000000008904350000000107700039000000000857004b0000005f0000413d000000000706004b000000760000613d0000000505500210000000000151034f00000000055300190000000306600210000000000705043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f00000000001504350000000101200190000000c90000613d00000000010404330000004502000041000000200410008c000000000400001900000000040240190000004501100197000000000501004b000000000200a019000000450110009c000000000204c019000000000102004b000000c10000c13d00000000010304330000003d0210009c000000c10000213d000000400200043d00000000001204350000003701000041000000370320009c0000000002018019000000400120021000000046011001c7000000d80001042e0000000002000416000000000202004b000000c10000c13d0000001f0230003900000038022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000a20000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000009a0000413d000000000502004b000000b10000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000200130008c000000c10000413d000000800100043d000000000010041b0000002001000039000001000010044300000120000004430000003901000041000000d80001042e0000000001000416000000000101004b000000c10000c13d000000000100041a000000800010043f0000003c01000041000000d80001042e0000000001000019000000d900010430000000470100004100000000001004350000004101000039000000040010043f0000004801000041000000d900010430000000400100043d000000430200004100000000002104350000003702000041000000370310009c0000000001028019000000400110021000000044011001c7000000d900010430000000d5002104210000000102000039000000000001042d0000000002000019000000000001042d000000d700000432000000d80001042e000000d9000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000c795c913000000000000000000000000000000000000000000000000000000001bb64f610000000000000000000000000000000000000020000000800000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff5d3827000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000001000000000000000000000000000000000000c4000000e0000000000000000000000000000000000000000000000000000000000000000000000003ffffffe0000000000000000000000000000000000000000000000000ffffffffffffffffa9d89177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000003eeedc8d2660c232d7cbd043c66fed72dabd36ecf22609e68ad2ad22be9dadb0";

type AgentAccountFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgentAccountFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgentAccountFactory__factory extends ContractFactory {
  constructor(...args: AgentAccountFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _aaBytecodeHash: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_aaBytecodeHash, overrides || {});
  }
  override deploy(
    _aaBytecodeHash: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_aaBytecodeHash, overrides || {}) as Promise<
      AgentAccountFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AgentAccountFactory__factory {
    return super.connect(runner) as AgentAccountFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgentAccountFactoryInterface {
    return new Interface(_abi) as AgentAccountFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AgentAccountFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AgentAccountFactory;
  }
}
