/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  UpgradeableBeacon,
  UpgradeableBeaconInterface,
} from "../../../../../@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "BeaconInvalidImplementation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000000000301001900000060033002700000004c0330019700000001022001900000002a0000c13d0000008002000039000000400020043f000000040230008c0000010c0000413d000000000201043b000000e002200270000000590420009c000000610000a13d0000005a0420009c0000006b0000613d0000005b0420009c000000840000613d0000005c0220009c0000010c0000c13d0000000002000416000000240330008c0000010c0000413d000000000202004b0000010c0000c13d0000000401100370000000000101043b0000004e061001970000004e0110009c0000010c0000213d000000000100041a0000004e051001970000000002000411000000000325004b000000b80000c13d000000000206004b000000e80000c13d0000005801000041000000800010043f000000840000043f00000060010000410000012b000104300000000002000416000000000202004b0000010c0000c13d0000001f023000390000004d022001970000008002200039000000400020043f0000001f0230018f00000005043002720000003d0000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000350000413d000000000502004b0000004c0000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000400130008c0000010c0000413d000000800400043d0000004e0140009c0000010c0000213d000000a00600043d0000004e0160009c0000010c0000213d000000400300043d000000000106004b000000bd0000c13d00000058010000410000000000130435000000040130003900000000000104350000004c010000410000004c0230009c0000000003018019000000400130021000000057011001c70000012b000104300000005d0420009c0000008c0000613d0000005e0120009c0000010c0000c13d0000000001000416000000000101004b0000010c0000c13d0000000101000039000000000101041a000000880000013d0000000001000416000000000101004b0000010c0000c13d000000000100041a0000004e051001970000000002000411000000000325004b000000b80000c13d0000004f01100197000000000010041b0000004c0100004100000000020004140000004c0320009c0000000002018019000000c00120021000000050011001c70000800d020000390000000303000039000000510400004100000000060000190129011f0000040f00000001012001900000010c0000613d00000000010000190000012a0001042e0000000001000416000000000101004b0000010c0000c13d000000000100041a0000004e01100197000000800010043f00000061010000410000012a0001042e0000000002000416000000240330008c0000010c0000413d000000000202004b0000010c0000c13d0000000401100370000000000101043b0000004e041001970000004e0210009c0000010c0000213d000000000200041a0000004e032001970000000002000411000000000323004b000000b80000c13d000200000004001d0000005202000041000000000020043900000004001004430000004c0100004100000000020004140000004c0320009c0000000002018019000000c00120021000000053011001c70000800202000039012901240000040f0000000102200190000000e70000613d000000000101043b000000000101004b0000010e0000c13d000000400100043d000000560200004100000000002104350000000402100039000000020300002900000000003204350000004c020000410000004c0310009c0000000001028019000000400110021000000057011001c70000012b000104300000005f01000041000000800010043f000000840020043f00000060010000410000012b00010430000100000003001d000000000200041a0000004f01200197000000000161019f000000000010041b0000004c0500004100000000010004140000004c0310009c0000000001058019000000c00110021000000050011001c7000200000004001d0000004e052001970000800d02000039000000030300003900000051040000410129011f0000040f000000020300002900000001012001900000010c0000613d00000052010000410000000000100439000000040030044300000000010004140000004c0210009c0000004c01008041000000c00110021000000053011001c70000800202000039012901240000040f0000000102200190000000e70000613d000000000101043b000000000101004b000000f50000c13d0000005601000041000000010300002900000000001304350000000401300039000000020200002900000000002104350000005b0000013d000000000001042f0000004f01100197000000000161019f000000000010041b0000004c0100004100000000020004140000004c0320009c0000000002018019000000c00120021000000050011001c70000800d02000039000000030300003900000051040000410000007f0000013d0000000101000039000000000201041a0000004f022001970000000205000029000000000252019f000000000021041b0000004c0100004100000000020004140000004c0320009c0000000002018019000000c00120021000000050011001c70000800d02000039000000020300003900000054040000410129011f0000040f00000001012001900000010c0000613d00000020010000390000010000100443000001200000044300000055010000410000012a0001042e00000000010000190000012b000104300000000101000039000000000201041a0000004f022001970000000205000029000000000252019f000000000021041b0000004c0100004100000000020004140000004c0320009c0000000002018019000000c00120021000000050011001c70000800d02000039000000020300003900000054040000410000007f0000013d000000000001042f00000122002104210000000102000039000000000001042d0000000002000019000000000001042d00000127002104230000000102000039000000000001042d0000000002000019000000000001042d00000129000004320000012a0001042e0000012b00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e01806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b0000000200000000000000000000000000000040000001000000000000000000847ac5640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000001e4fbdf70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000715018a500000000000000000000000000000000000000000000000000000000715018a6000000000000000000000000000000000000000000000000000000008da5cb5b00000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000003659cfe6000000000000000000000000000000000000000000000000000000005c60da1b118cdaa7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000800000000000000000000000000000000000000000000000000000002000000080000000000000000098ab46d7afed462699d3336e329aa28e2f3dbcb3336701349c494c9d79ea7093";

type UpgradeableBeaconConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeableBeaconConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeableBeacon__factory extends ContractFactory {
  constructor(...args: UpgradeableBeaconConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    implementation_: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      implementation_,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    implementation_: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      implementation_,
      initialOwner,
      overrides || {}
    ) as Promise<
      UpgradeableBeacon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UpgradeableBeacon__factory {
    return super.connect(runner) as UpgradeableBeacon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeableBeaconInterface {
    return new Interface(_abi) as UpgradeableBeaconInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpgradeableBeacon {
    return new Contract(address, _abi, runner) as unknown as UpgradeableBeacon;
  }
}
