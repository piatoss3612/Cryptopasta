{
    "swagger": "2.0",
    "info": {
        "description": "API for Cryptopasta DApp",
        "title": "Cryptopasta API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "piatoss",
            "url": "https://piatoss.xyz",
            "email": "piatoss3612@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/agent": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register a new agent to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "agent"
                ],
                "summary": "Agent Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Agent Address",
                        "name": "agent_address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Portrait ID",
                        "name": "portrait_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Ping",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/temp": {
            "get": {
                "description": "Temporary route for testing JWT middleware",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Temp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "description": "returns websocket connection",
                "tags": [
                    "websocket"
                ],
                "summary": "Serve websocket",
                "responses": {}
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}