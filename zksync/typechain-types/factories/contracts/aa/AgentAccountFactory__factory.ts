/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AgentAccountFactory,
  AgentAccountFactoryInterface,
} from "../../../contracts/aa/AgentAccountFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_aaBytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AgentAccountFactory__DeploymentFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "aaBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "deployAccount",
    outputs: [
      {
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000100000001035500000000030100190000006003300270000000330030019d00000033033001970000000100200190000000820000c13d0000008002000039000000400020043f000000040030008c000000b20000413d000000000401043b000000e004400270000000360040009c000000ab0000613d000000370040009c000000b20000c13d000000440030008c000000b20000413d0000000003000416000000000003004b000000b20000c13d0000002403100370000000000303043b000000390030009c000000b20000213d0000000004000414000000000500041a000000a00030043f0000002006000039000000800060043f0000003a07000041000000e00070043f0000000401100370000000000101043b000000e40010043f000001040050043f000001240020043f000001640060043f000001840030043f000001a40000043f0000000101000039000001440010043f000000c401000039000000c00010043f000001c001000039000000400010043f000000c0014002100000003b011001970000003c011001c70000800602000039000000000300001900000000040000190000000005000019000000000600001900c700c20000040f0000000003010019000000600330027000000033053001970000001f0350003900000034063001970000003f036000390000003d07300197000000400300043d0000000004370019000000000074004b000000000700001900000001070040390000003e0040009c000000b40000213d0000000100700190000000b40000c13d000000400040043f00000000045304360000001f0760018f0000000500600272000000560000613d0000000008000031000000010880036700000000066400190000000009040019000000008a08043c0000000009a90436000000000069004b000000520000c13d000000000007004b000000580000613d0000001f0650018f00000005055002720000000505500210000000630000613d0000000007540019000000000801034f0000000009040019000000008a08043c0000000009a90436000000000079004b0000005f0000c13d000000000006004b000000710000613d000000000151034f00000000055400190000000306600210000000000705043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f00000000001504350000000100200190000000ba0000613d0000000001030433000000410010009c000000b20000213d000000200010008c000000b20000413d0000000001040433000000390010009c000000b20000213d000000400200043d0000000000120435000000330020009c0000003302008041000000400120021000000042011001c7000000c80001042e0000000002000416000000000002004b000000b20000c13d0000001f0230003900000034022001970000008002200039000000400020043f0000001f0230018f00000005043002720000000504400210000000940000613d00000080050000390000008006400039000000000701034f000000007807043c0000000005850436000000000065004b000000900000c13d000000000002004b000000a20000613d000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000200030008c000000b20000413d000000800100043d000000000010041b0000002001000039000001000010044300000120000004430000003501000041000000c80001042e0000000001000416000000000001004b000000b20000c13d000000000100041a000000800010043f0000003801000041000000c80001042e0000000001000019000000c900010430000000430100004100000000001004350000004101000039000000040010043f0000004401000041000000c900010430000000400100043d0000003f020000410000000000210435000000330010009c0000003301008041000000400110021000000040011001c7000000c900010430000000c5002104210000000102000039000000000001042d0000000002000019000000000001042d000000c700000432000000c80001042e000000c9000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000c795c913000000000000000000000000000000000000000000000000000000001bb64f610000000000000000000000000000000000000020000000800000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff5d3827000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000001000000000000000000000000000000000000c4000000e0000000000000000000000000000000000000000000000000000000000000000000000003ffffffe0000000000000000000000000000000000000000000000000ffffffffffffffffa9d891770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000200000000000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ce52ab092ba210bca99a3e2e96ad28d96f48cecf09db0c43c2d787a2c5e97b55";

type AgentAccountFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgentAccountFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgentAccountFactory__factory extends ContractFactory {
  constructor(...args: AgentAccountFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _aaBytecodeHash: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_aaBytecodeHash, overrides || {});
  }
  override deploy(
    _aaBytecodeHash: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_aaBytecodeHash, overrides || {}) as Promise<
      AgentAccountFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AgentAccountFactory__factory {
    return super.connect(runner) as AgentAccountFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgentAccountFactoryInterface {
    return new Interface(_abi) as AgentAccountFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AgentAccountFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AgentAccountFactory;
  }
}
